#!/bin/bash

CONFIG_FILE=$SNAP_DATA/config_options

function choose_kiosk_or_shell()
{
    local kiosk_mode=on
    if [ -e ${config_file} ]; then
        kiosk_mode=$(grep kiosk-mode ${CONFIG_FILE} | cut -d'=' -f2)
    fi

    if [ "${kiosk_mode}" == "off" ]; then
        echo "miral-shell"
    else
        echo "miral-kiosk"
    fi
}

if [ "$SNAP_ARCH" == "amd64" ]; then
    ARCH="x86_64-linux-gnu"
elif [ "$SNAP_ARCH" == "armhf" ]; then
    ARCH="arm-linux-gnueabihf"
elif [ "$SNAP_ARCH" == "arm64" ]; then
    ARCH="aarch64-linux-gnu"
else
    ARCH="$SNAP_ARCH-linux-gnu"
fi

export XKB_CONFIG_ROOT=$SNAP/usr/share/X11/xkb
export XCURSOR_PATH=$SNAP/icons
export MIR_CLIENT_PLATFORM_PATH=$SNAP/mir-libs/$ARCH/mir/client-platform
export MIR_SERVER_PLATFORM_PATH=$SNAP/mir-libs/$ARCH/mir/server-platform
export LD_LIBRARY_PATH="$SNAP/mir-libs/$ARCH:$SNAP/mir-libs/$ARCH/mesa-egl:$LD_LIBRARY_PATH"

while true; do

    bin_to_run=$(choose_kiosk_or_shell)

    $SNAP/usr/bin/${bin_to_run} --vt 1 --arw-file --file /run/mir_socket &
    miral_pid=$!

    # Config file should exist but let's make sure
    # otherwise, inotifywait will exit immediately and loop will
    # keep restarting server
    if [ -e "${CONFIG_FILE}" ]; then
        $SNAP/usr/bin/inotifywait -e modify ${CONFIG_FILE} &
        inotify_pid=$!
    fi

    # Wait for a notification or server death
    wait -n

    # Server may have died, stop waiting for config notifications
    if [ -n "${inotify_pid}" ]; then
        kill ${inotify_pid} > /dev/null
        wait ${inotify_pid}
        unset inotify_pid
    fi

    echo "Shutting down ${bin_to_run} (pid: ${miral_pid})"
    kill ${miral_pid} > /dev/null
    if [ $? -ne 0 ]; then
        echo "${bin_to_run} was already dead!"
        exit 1
    fi

    # Ensure server processes has quit for sure
    wait ${miral_pid}
    unset miral_pid
done
